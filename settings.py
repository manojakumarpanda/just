"""
Django settings for icaap project.

Generated by 'django-admin startproject' using Django 3.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os,logging

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

logging.basicConfig(
    level = logging.INFO,
    format = '%(asctime)s %(levelname)s %(message)s',
    filename = os.path.join(BASE_DIR,'djangoLog.log'))

SECRET_KEY = 'udydurw5_oczztifqhgphinno#6g3j#4cvf4^rm6w3y(e-w=%!'
DEBUG = True
# ALLOWED_HOSTS = ['13.235.184.110']
ALLOWED_HOSTS = ["*"]
APPEND_SLASH=False
SERVERURL="http://"+ALLOWED_HOSTS[0]

LANGUAGE_CODE = 'en-us'

TIME_ZONE='UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
MEDIA_ROOT = os.path.join(BASE_DIR,'media_files')
DOWNLOAD_URL_EXPIRY=60 #seconds
OTP_EXPIRY_DURATION = 15 #minutes
LOCKOUT_COUNT_RESET_DURATION = 10 #minutes
INCORRECT_PASSWORD_COUNT_THRESHOLD = 5 #minutes #If wrong password is entered x number of times within these minutes then lockout will be initiated
INCORRECT_PASSWORD_COUNT_MAX_ATTEMPTS = 5 #Should be grater than 1 # If these many number of wrong password attempts are made in x minutes then lockout will be intiated

LOCKOUT_PASSWORD_RESET_INIT_DURATION = 10 #minutes
PASSWORD_RESET_INIT_COUNT_THRESHOLD = 5 #minutes #If wrong password is entered x number of times within these minutes then lockout will be initiated
PASSWORD_RESET_INIT_COUNT_MAX_ATTEMPTS = 5 #Should be grater than 1 # If these many number of wrong password attempts are made in x minutes then lockout will be intiated
FILE_DOWNLOAD_URL_EXPIRY = 60 #secs

VERIFICATION_LINK_EXPIRY_DURATION = 30 #mins


TEMPLATE_DIR=os.path.join(BASE_DIR,'templates')

INSTALLED_APPS = [
    # 'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',	
    'usermanagement',
    'materiality_assessment',
    'business_plan'	,
    'pillar2',
    'pillar1',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'icaap.UserVerification.CheckToken',	
]

ROOT_URLCONF = 'icaap.urls'
CORS_ORIGIN_ALLOW_ALL=True

CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]

CORS_ALLOW_HEADERS = [
    'accept',
    'token',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'icaap.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': 'icaapDB',
#         'USER': 'ubuntu',
#         'PASSWORD': 'sdfseD2A3RfsfJJ',
#         'HOST': 'localhost',
#         # 'PORT': '5432',
#     }
# }




# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

ALLOWED_USER_EMAIL_DOMAINS = ["kpmg.com"]
SUPERUSER = "superuser@kpmg.com"
SUPERUSERPASS = "superuserpass@61011"
# DEFAULT_USER_ROLES = [""]
# APP = {"FOLLWUPAI":1,"VMS":1}


